from collections.abc import Mapping
from typing import ClassVar

from direct.directnotify.Notifier import Notifier

class PhasedObject:
    notify: ClassVar[Notifier]
    phase: int
    phaseAliasMap: dict[int, str]
    aliasPhaseMap: dict[str, int]
    def __init__(self, aliasMap: Mapping[int, str] = ...) -> None: ...
    def setAlias(self, phase: int, alias: str) -> None: ...
    def getPhaseAlias(self, phase: int) -> str: ...
    def getAliasPhase(self, alias: str) -> int: ...
    def getPhase(self) -> str: ...
    def setPhase(self, aPhase: int | str) -> None: ...
    def cleanup(self) -> None: ...
