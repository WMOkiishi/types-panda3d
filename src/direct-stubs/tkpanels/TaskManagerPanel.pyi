import tkinter
from typing import Any
from typing_extensions import Literal

import Pmw  # type: ignore[import]
from direct.showbase.DirectObject import DirectObject
from direct.task.Task import Task, TaskManager
from direct.tkwidgets.AppShell import AppShell

class TaskManagerPanel(AppShell):
    taskMgr: TaskManager
    taskMgrWidget: Any
    def __init__(self, taskMgr: TaskManager, parent: tkinter.Toplevel | None = None, **kw) -> None: ...

class TaskManagerWidget(DirectObject):
    parent: tkinter.Misc | None
    taskMgr: TaskManager
    currentTask: Task | None
    taskListBox: Pmw.ScrolledListBox
    removeButton: tkinter.Button
    removeMatchingButton: tkinter.Button
    taskMgrVerbose: tkinter.IntVar
    update: tkinter.Button
    dynamicUpdate: tkinter.Checkbutton
    def __init__(self, parent: tkinter.Misc | None, taskMgr: TaskManager) -> None: ...
    def popupMenu(self, event) -> Literal['break']: ...
    def setCurrentTask(self, event=None) -> None: ...
    def updateTaskListBox(self) -> None: ...
    def toggleTaskMgrVerbose(self) -> None: ...
    def spawnTaskHook(self, task) -> None: ...
    def removeTaskHook(self, task) -> None: ...
    def removeCurrentTask(self) -> None: ...
    def removeMatchingTasks(self) -> None: ...
    def onDestroy(self) -> None: ...
