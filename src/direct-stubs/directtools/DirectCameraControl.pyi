from collections.abc import Sequence
from typing import Any, ClassVar
from typing_extensions import Literal, TypeAlias

from panda3d.core import AsyncTask, LPoint3f, LVector3f, NodePath, PandaNode
from ..directnotify.Notifier import Notifier
from ..interval.MetaInterval import MetaInterval
from ..showbase.DirectObject import DirectObject

CAM_MOVE_DURATION: float
COA_MARKER_SF: float
Y_AXIS: LVector3f

_OldBool: TypeAlias = Literal[0, 1]
_TaskCont: TypeAlias = Literal[1]

class DirectCameraControl(DirectObject):
    notify: ClassVar[Notifier]
    startT: float
    startF: int
    orthoViewRoll: float
    lastView: int
    coa: LPoint3f
    coaMarker: NodePath
    coaMarkerPos: LPoint3f
    coaMarkerColorIval: MetaInterval | None
    fLockCOA: bool | _OldBool
    nullHitPointCount: int
    cqEntries: list
    coaMarkerRef: NodePath[PandaNode]
    camManipRef: NodePath[PandaNode]
    switchDirBelowZero: bool
    manipulateCameraTask: AsyncTask | None
    manipulateCameraInterval: MetaInterval | None
    actionEvents: list[list[Any]]
    keyEvents: list[list[Any]]
    lockRoll: bool
    useMayaCamControls: bool | _OldBool
    altDown: bool | _OldBool
    perspCollPlane: NodePath | None
    perspCOllPlane2: NodePath | None
    def __init__(self) -> None: ...
    def toggleMarkerVis(self) -> None: ...
    def mouseRotateStart(self, modifiers: int) -> None: ...
    def mouseDollyStart(self, modifiers: int) -> None: ...
    def mouseDollyStop(self) -> None: ...
    def mouseFlyStart(self, modifiers: int) -> None: ...
    def mouseFlyStop(self) -> None: ...
    def mouseFlyStartTopWin(self) -> None: ...
    def mouseFlyStopTopWin(self) -> None: ...
    def spawnXZTranslateOrHPanYZoom(self) -> None: ...
    def spawnXZTranslateOrHPPan(self) -> None: ...
    def spawnXZTranslate(self) -> None: ...
    def spawnOrthoTranslate(self) -> None: ...
    def spawnHPanYZoom(self) -> None: ...
    def spawnOrthoZoom(self) -> None: ...
    def spawnHPPan(self) -> None: ...
    def XZTranslateOrHPanYZoomTask(self, state) -> _TaskCont: ...
    def XZTranslateOrHPPanTask(self, state) -> _TaskCont: ...
    def XZTranslateTask(self, state: object) -> _TaskCont: ...
    def OrthoTranslateTask(self, state) -> _TaskCont: ...
    def HPanYZoomTask(self, state) -> _TaskCont | None: ...
    def OrthoZoomTask(self, state: object) -> _TaskCont: ...
    def HPPanTask(self, state: object) -> _TaskCont: ...
    def spawnMouseRotateTask(self) -> None: ...
    def mouseRotateTask(self, state) -> _TaskCont: ...
    def spawnMouseRollTask(self) -> None: ...
    def mouseRollTask(self, state) -> _TaskCont: ...
    def lockCOA(self) -> None: ...
    def unlockCOA(self) -> None: ...
    def toggleCOALock(self) -> None: ...
    def pickNextCOA(self) -> None: ...
    def computeCOA(self, entry) -> None: ...
    def updateCOA(self, ref2point: Sequence[float], coaDist: float | None = None, ref=None) -> None: ...
    def updateCoaMarkerSizeOnDeath(self) -> None: ...
    def updateCoaMarkerSize(self, coaDist: float | None = None) -> None: ...
    def homeCam(self) -> None: ...
    def uprightCam(self) -> None: ...
    def orbitUprightCam(self) -> None: ...
    def centerCam(self) -> None: ...
    def centerCamNow(self) -> None: ...
    def centerCamIn(self, t) -> None: ...
    def zoomCam(self, zoomFactor, t) -> None: ...
    def spawnMoveToView(self, view: int) -> None: ...
    def swingCamAboutWidget(self, degrees: float, t: object) -> None: ...
    def reparentCam(self, parent) -> None: ...
    def fitOnWidget(self, nodePath: object = 'None Given') -> None: ...
    def moveToFit(self) -> None: ...
    def stickToWidgetTask(self, state: object) -> _TaskCont: ...
    def enableMouseFly(self, fKeyEvents: bool | _OldBool) -> None: ...
    def disableMouseFly(self) -> None: ...
    def removeManipulateCameraTask(self) -> None: ...

