from tkinter import Button, Label, Scale
from typing import Any, SupportsFloat
from typing_extensions import Final

from direct.showbase.DirectObject import DirectObject
from panda3d.core import NodePath

Pmw: Any

DEFAULT_BT_WIDTH: Final[float]

class MemoryExplorer(Pmw.MegaWidget, DirectObject):
    nodePath: NodePath
    renderItem = ...
    render2dItem = list
    buttons: list[Button]
    labels: list[Label]
    rootItem = ...
    btWidth: float
    balloon: Pmw.Balloon
    frame: Pmw.ScrolledFrame
    scaleCtrl: Scale
    refreshBT: Button
    def __init__(self, parent=None, nodePath: NodePath | None = None, **kw) -> None: ...
    def createScrolledFrame(self) -> None: ...
    def createScale(self) -> None: ...
    def createRefreshBT(self) -> None: ...
    def createDefaultCtrls(self) -> None: ...
    def setTitle(self, parent, bytes) -> None: ...
    def resetCtrls(self) -> None: ...
    def getNewButton(self, width: float, ratio: float) -> Button: ...
    def addSelfCtrl(self, item, totalBytes: int) -> None: ...
    def addChildCtrl(self, item, totalBytes: int) -> None: ...
    def addButton(self, vertexBytes, totalBytes: int, funcLClick, funcRClick, item) -> Button: ...
    def addLabel(self, label: str) -> None: ...
    def getBTWidth(self, vertexBytes: int, totalBytes: int) -> int: ...
    def onScaleUpdate(self, arg: SupportsFloat) -> None: ...
    def updateBTWidth(self) -> None: ...
    def updateDefaultBTWidth(self) -> None: ...
    def onSelfButtonLClick(self, item) -> None: ...
    def onSelfButtonRClick(self, item) -> None: ...
    def onChildButtonLClick(self, item) -> None: ...
    def onChildButtonRClick(self, item) -> None: ...
    def addItemCtrls(self, item) -> None: ...
    def makeList(self) -> None: ...
    def buildList(self, parentItem) -> None: ...
    def analyze(self) -> None: ...
    def refresh(self) -> None: ...

class MemoryExplorerItem:
    parent = ...
    nodePath: NodePath
    children: list
    selfVertexBytes: int
    childrenVertexBytes: int
    numFaces: int
    textureBytes: int
    pathName: str
    def __init__(self, parent, nodePath: NodePath) -> None: ...
    def getParent(self): ...
    def addChild(self, child) -> None: ...
    def getNumChildren(self) -> int: ...
    def getChildren(self) -> list: ...
    def getName(self) -> str: ...
    def getPathName(self) -> str: ...
    def getVertexBytes(self) -> int: ...
    def getSelfVertexBytes(self) -> int: ...
    def analyze(self) -> None: ...
    def calcVertexBytes(self, geom) -> None: ...
    def calcTextureBytes(self) -> None: ...
    def calcNumFaces(self, geom) -> None: ...
    def analyzeChildren(self) -> None: ...
    def ls(self, indent: str = ...) -> None: ...
