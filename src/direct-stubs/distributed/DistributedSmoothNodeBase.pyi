from typing import ClassVar
from typing_extensions import Literal

from direct._typing import Unused
from direct.showbase.PythonUtil import Enum

class DummyTaskClass:
    def setDelay(self, blah: Unused) -> None: ...

DummyTask: DummyTaskClass

class DistributedSmoothNodeBase:
    BroadcastTypes: ClassVar[Enum]
    def __init__(self) -> None: ...
    def generate(self) -> None: ...
    def disable(self) -> None: ...
    def delete(self) -> None: ...
    def b_clearSmoothing(self) -> None: ...
    def d_clearSmoothing(self) -> None: ...
    def getPosHprBroadcastTaskName(self) -> str: ...
    def setPosHprBroadcastPeriod(self, period: float) -> None: ...
    def getPosHprBroadcastPeriod(self) -> float: ...
    def stopPosHprBroadcast(self) -> None: ...
    def posHprBroadcastStarted(self) -> bool: ...
    def wantSmoothPosBroadcastTask(self) -> Literal[True]: ...
    def startPosHprBroadcast(self, period: float = 0.2, stagger: bool = ..., type=None) -> None: ...
    def sendCurrentPosition(self) -> None: ...
